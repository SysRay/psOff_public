name: build

on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - '.github/workflows/build.yml'
      - '**/CMakeLists.txt'
      - 'CMakeLists.txt'
      - '**.cmake'
      - '**.cpp'
      - '**.cxx'
      - '**.cc'
      - '**.c'
      - '**.hpp'
      - '**.hh'
      - '**.h'

  push:
    paths:
      - '.github/workflows/build.yml'
      - '**/CMakeLists.txt'
      - 'CMakeLists.txt'
      - '**.cmake'
      - '**.cpp'
      - '**.cxx'
      - '**.cc'
      - '**.c'
      - '**.hpp'
      - '**.hh'
      - '**.h'

jobs:
  formatting-check:
    name: Formatting check
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: DoozyX/clang-format-lint-action@v0.17
        with:
          source: ./
          extensions: h,hpp,cpp,c,cc
          clangFormatVersion: 17
          inplace: true

      - name: Checkout pr
        if: ${{ github.event_name == 'pull_request' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr checkout ${{ github.event.pull_request.number }}

      - name: Push if needed
        if: ${{ github.event_name == 'pull_request' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if ! git diff --exit-code; then
            git config user.name 'github-actions[bot]';
            git config user.email '41898282+github-actions[bot]@users.noreply.github.com';
            git add .;
            git commit -m "[skip ci] Fix code formatting";
            git push;
          fi
      - name: Show diff
        if: ${{ github.event_name != 'pull_request' }}
        run: git diff --exit-code;

  build:
    needs: formatting-check
    name: Emulator
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Restore cached deps
        uses: actions/cache@v4
        id: cache-thirdparty
        with:
          path: third_party
          key: ${{ runner.os }}-submodules

      - name: Update submodules
        if: steps.cache-thirdparty.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Detect MSVC
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x86_64

      - name: Prepare Vulkan SDK
        uses: humbletim/install-vulkan-sdk@c2aa128094d42ba02959a660f03e0a4e012192f9
        with:
          version: 1.3.275.0
          cache: true

      - name: Configure
        run: |
          echo "::add-matcher::tools/matchers/cmake.json"
          cmake.exe -S. -B_build/_Release -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=_build/_Install -DCMAKE_C_COMPILER=clang-cl.exe -DCMAKE_CXX_COMPILER=clang-cl.exe

      - name: Build
        run: |
          echo "::add-matcher::tools/matchers/cmake.json"
          echo "::add-matcher::tools/matchers/compilers.json"
          cmake --build _build/_Release -j4

      - name: Install
        run: |
          echo "::add-matcher::tools/matchers/cmake.json"
          cmake.exe --install _build/_Release

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: psOff-libs
          path: _build/_Install/*
